        -:    0:Source:cardtest4.c
        -:    0:Graph:cardtest4.gcno
        -:    0:Data:cardtest4.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    0:Source is newer than graph
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include <string.h>
        -:    4:#include <stdio.h>
        -:    5:#include <assert.h>
        -:    6:#include "rngs.h"
        -:    7:
        -:    8:
function main called 1 returned 100% blocks executed 82%
        1:    9:int main(){
        -:   10:         int r;
        -:   11:        int check;
        -:   12:	int count;
        1:   13:        printf("great_hall unit test ----\n");
call    0 returned 100%
        1:   14:        int k[10] = {adventurer, council_room, feast, gardens, mine,
        -:   15:               remodel, smithy, village, baron, great_hall};
        -:   16:
        -:   17:        struct gameState G;
        -:   18:
        1:   19:         r = initializeGame(2, k, 1, &G);
call    0 returned 100%
        -:   20:
        1:   21:        check = cardEffect(great_hall,0,0,0,&G,0,0);
call    0 returned 100%
        -:   22:	
        -:   23:	int i;
     2001:   24:	for(i=0;i<sizeof(G.hand[0]);i++){
branch  0 taken 99%
branch  1 taken 1% (fallthrough)
     2000:   25:		if(G.hand[0][i] > 0){
branch  0 taken 1% (fallthrough)
branch  1 taken 99%
        5:   26:			count++;
        -:   27:		}
        -:   28:	}
        1:   29:        if(count == 5 && G.numActions == 2){
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
        -:   30:
        1:   31:                printf("PASS\n");
call    0 returned 100%
        1:   32:                return 0;
        -:   33:
        -:   34:        }
        -:   35:
        -:   36:        else{
    #####:   37:		printf("count = %i | numActions = %i\n",count,G.numActions);
call    0 never executed
    #####:   38:                printf("FAILED\n");
call    0 never executed
    #####:   39:                return -1;
        -:   40:        }
        -:   41:
        -:   42:        return 0;
        -:   43:
        -:   44:}
